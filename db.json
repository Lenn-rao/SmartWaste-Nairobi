{
    "recyclingCenters": [
      {
        "id": 1,
        "name": "Green Earth Recycling",
        "location": "Westlands, Nairobi",
        "contact": "0722 123 456"
      },
      {
        "id": 2,
        "name": "EcoCycle Kenya",
        "location": "Karen, Nairobi",
        "contact": "0733 654 321"
      },
      {
        "id": 3,
        "name": "PlastiCare Solutions",
        "location": "Industrial Area, Nairobi",
        "contact": "0711 987 654"
      },
      {
        "id": 4,
        "name": "WastePro Services",
        "location": "Eastleigh, Nairobi",
        "contact": "0700 111 222"
      },
      {
        "id": 5,
        "name": "Nairobi Paper Recyclers",
        "location": "CBD, Nairobi",
        "contact": "0744 333 555"
      }
    ],
    "wastePickups": [
      {
        "id": 1,
        "name": "John Doe",
        "address": "Lavington, Nairobi",
        "date": "2025-04-01"
      },
      {
        "id": 2,
        "name": "Jane Wanjiku",
        "address": "Kilimani, Nairobi",
        "date": "2025-04-02"
      },
    ]
  }
  
  // SmartWaste - Nairobi

// Fetch and display recycling centers
function fetchCenters() {
    fetch('http://localhost:3000/recyclingCenters')
      .then(response => response.json())
      .then(data => {
        const centerList = document.getElementById('center-list');
        centerList.innerHTML = '';
        data.forEach(center => {
          const centerItem = document.createElement('li');
          centerItem.innerHTML = `${center.name} - ${center.location} <button onclick="deleteCenter(${center.id})">Delete</button>`;
          centerList.appendChild(centerItem);
        });
      })
      .catch(error => console.error('Error fetching centers:', error));
  }
  
  // Add a new recycling center
  function addCenter() {
    const name = document.getElementById('name').value;
    const location = document.getElementById('location').value;
    
    fetch('http://localhost:3000/recyclingCenters', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ name, location })
    })
      .then(response => response.json())
      .then(() => {
        fetchCenters();
      })
      .catch(error => console.error('Error adding center:', error));
  }
  
  // Update a recycling center
  function updateCenter(id, newContact) {
    fetch(`http://localhost:3000/recyclingCenters/${id}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ contact: newContact })
    })
      .then(response => response.json())
      .then(() => fetchCenters())
      .catch(error => console.error('Error updating center:', error));
  }
  
  // Delete a recycling center
  function deleteCenter(id) {
    fetch(`http://localhost:3000/recyclingCenters/${id}`, {
      method: 'DELETE'
    })
      .then(() => fetchCenters())
      .catch(error => console.error('Error deleting center:', error));
  }
  
  // Initial fetch when page loads
  document.addEventListener('DOMContentLoaded', fetchCenters);
  
